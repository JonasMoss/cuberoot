
N <- 10000

ssci <- function(data,alpha=0.05,b=50,K=1000){
  est <- sde(data)
  data_mat <- matrix(replicate(K,sample(data,b)),b,K)
  ests <- apply(data_mat,2,sde)
  subs <- b^(1/3)*(ests-est)
  quants <- quantile(subs,c(alpha/2,1-alpha/2))
  est + quants/b^(1/3)
}

verify_ss <- function(q_true){
  data <- rbeta(100,2,7)
  vec <- ssci(data)
  q_true <= vec[2] & q_true >= vec[1] 
}

result <- sum(replicate(N,verify_ss(q_true)))/N
result
[1] 0.9099

#####


N <- 10000
set.seed(1848)

ssci <- function(data,alpha=0.05,b=100,K=1000){
  est <- sde(data)
  ests <- replicate(K,sde(sample(data,b)))
  subs <- ests-est
  quants <- quantile(subs,c(alpha/2,1-alpha/2))
  est + quants
}

verify_ss <- function(q_true){
  data <- rbeta(200,2,7)
  vec <- ssci(data)
  q_true <= vec[2] & q_true >= vec[1] 
}

result <- sum(replicate(N,verify_ss(q_true)))/N
result
[1] 0.9352


############


N <- 10000
set.seed(1848)

ssci <- function(data,alpha=0.05,b=500,K=1000){
  est <- sde(data)
  ests <- replicate(K,sde(sample(data,b)))
  subs <- ests-est
  quants <- quantile(subs,c(alpha/2,1-alpha/2))
  est + quants
}

verify_ss <- function(q_true){
  data <- rbeta(1000,2,7)
  vec <- ssci(data)
  q_true <= vec[2] & q_true >= vec[1] 
}

result <- sum(replicate(N,verify_ss(q_true)))/N
result
[1] 0.9585